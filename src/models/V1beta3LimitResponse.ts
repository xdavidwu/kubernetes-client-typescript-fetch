/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1beta3QueuingConfiguration } from './V1beta3QueuingConfiguration';
import {
    V1beta3QueuingConfigurationFromJSON,
    V1beta3QueuingConfigurationFromJSONTyped,
    V1beta3QueuingConfigurationToJSON,
} from './V1beta3QueuingConfiguration';

/**
 * LimitResponse defines how to handle requests that can not be executed right now.
 * @export
 * @interface V1beta3LimitResponse
 */
export interface V1beta3LimitResponse {
    /**
     * 
     * @type {V1beta3QueuingConfiguration}
     * @memberof V1beta3LimitResponse
     */
    queuing?: V1beta3QueuingConfiguration;
    /**
     * `type` is "Queue" or "Reject". "Queue" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. "Reject" means that requests that can not be executed upon arrival are rejected. Required.
     * @type {string}
     * @memberof V1beta3LimitResponse
     */
    type: string;
}

/**
 * Check if a given object implements the V1beta3LimitResponse interface.
 */
export function instanceOfV1beta3LimitResponse(value: object): value is V1beta3LimitResponse {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function V1beta3LimitResponseFromJSON(json: any): V1beta3LimitResponse {
    return V1beta3LimitResponseFromJSONTyped(json, false);
}

export function V1beta3LimitResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta3LimitResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'queuing': json['queuing'] == null ? undefined : V1beta3QueuingConfigurationFromJSON(json['queuing']),
        'type': json['type'],
    };
}

export function V1beta3LimitResponseToJSON(value?: V1beta3LimitResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'queuing': V1beta3QueuingConfigurationToJSON(value['queuing']),
        'type': value['type'],
    };
}

