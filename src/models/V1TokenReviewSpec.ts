/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * TokenReviewSpec is a description of the token authentication request.
 * @export
 * @interface V1TokenReviewSpec
 */
export interface V1TokenReviewSpec {
    /**
     * Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.
     * @type {Array<string>}
     * @memberof V1TokenReviewSpec
     */
    audiences?: Array<string>;
    /**
     * Token is the opaque bearer token.
     * @type {string}
     * @memberof V1TokenReviewSpec
     */
    token?: string;
}

/**
 * Check if a given object implements the V1TokenReviewSpec interface.
 */
export function instanceOfV1TokenReviewSpec(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1TokenReviewSpecFromJSON(json: any): V1TokenReviewSpec {
    return V1TokenReviewSpecFromJSONTyped(json, false);
}

export function V1TokenReviewSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1TokenReviewSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'audiences': !exists(json, 'audiences') ? undefined : json['audiences'],
        'token': !exists(json, 'token') ? undefined : json['token'],
    };
}

export function V1TokenReviewSpecToJSON(value?: V1TokenReviewSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'audiences': value.audiences,
        'token': value.token,
    };
}

