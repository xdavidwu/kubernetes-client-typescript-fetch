/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * SecretKeySelector selects a key of a Secret.
 * @export
 * @interface V1SecretKeySelector
 */
export interface V1SecretKeySelector {
    /**
     * The key of the secret to select from.  Must be a valid secret key.
     * @type {string}
     * @memberof V1SecretKeySelector
     */
    key: string;
    /**
     * Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof V1SecretKeySelector
     */
    name?: string;
    /**
     * Specify whether the Secret or its key must be defined
     * @type {boolean}
     * @memberof V1SecretKeySelector
     */
    optional?: boolean;
}

/**
 * Check if a given object implements the V1SecretKeySelector interface.
 */
export function instanceOfV1SecretKeySelector(value: object): value is V1SecretKeySelector {
    if (!('key' in value) || value['key'] === undefined) return false;
    return true;
}

export function V1SecretKeySelectorFromJSON(json: any): V1SecretKeySelector {
    return V1SecretKeySelectorFromJSONTyped(json, false);
}

export function V1SecretKeySelectorFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1SecretKeySelector {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'],
        'name': json['name'] == null ? undefined : json['name'],
        'optional': json['optional'] == null ? undefined : json['optional'],
    };
}

export function V1SecretKeySelectorToJSON(value?: V1SecretKeySelector | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'key': value['key'],
        'name': value['name'],
        'optional': value['optional'],
    };
}

