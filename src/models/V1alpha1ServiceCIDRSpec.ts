/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ServiceCIDRSpec define the CIDRs the user wants to use for allocating ClusterIPs for Services.
 * @export
 * @interface V1alpha1ServiceCIDRSpec
 */
export interface V1alpha1ServiceCIDRSpec {
    /**
     * CIDRs defines the IP blocks in CIDR notation (e.g. "192.168.0.0/24" or "2001:db8::/64") from which to assign service cluster IPs. Max of two CIDRs is allowed, one of each IP family. This field is immutable.
     * @type {Array<string>}
     * @memberof V1alpha1ServiceCIDRSpec
     */
    cidrs?: Array<string>;
}

/**
 * Check if a given object implements the V1alpha1ServiceCIDRSpec interface.
 */
export function instanceOfV1alpha1ServiceCIDRSpec(value: object): value is V1alpha1ServiceCIDRSpec {
    return true;
}

export function V1alpha1ServiceCIDRSpecFromJSON(json: any): V1alpha1ServiceCIDRSpec {
    return V1alpha1ServiceCIDRSpecFromJSONTyped(json, false);
}

export function V1alpha1ServiceCIDRSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1ServiceCIDRSpec {
    if (json == null) {
        return json;
    }
    return {
        
        'cidrs': json['cidrs'] == null ? undefined : json['cidrs'],
    };
}

export function V1alpha1ServiceCIDRSpecToJSON(value?: V1alpha1ServiceCIDRSpec | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'cidrs': value['cidrs'],
    };
}

