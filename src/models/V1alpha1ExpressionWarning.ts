/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.28.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * ExpressionWarning is a warning information that targets a specific expression.
 * @export
 * @interface V1alpha1ExpressionWarning
 */
export interface V1alpha1ExpressionWarning {
    /**
     * The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is "spec.validations[0].expression"
     * @type {string}
     * @memberof V1alpha1ExpressionWarning
     */
    fieldRef: string;
    /**
     * The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.
     * @type {string}
     * @memberof V1alpha1ExpressionWarning
     */
    warning: string;
}

/**
 * Check if a given object implements the V1alpha1ExpressionWarning interface.
 */
export function instanceOfV1alpha1ExpressionWarning(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fieldRef" in value;
    isInstance = isInstance && "warning" in value;

    return isInstance;
}

export function V1alpha1ExpressionWarningFromJSON(json: any): V1alpha1ExpressionWarning {
    return V1alpha1ExpressionWarningFromJSONTyped(json, false);
}

export function V1alpha1ExpressionWarningFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1ExpressionWarning {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldRef': json['fieldRef'],
        'warning': json['warning'],
    };
}

export function V1alpha1ExpressionWarningToJSON(value?: V1alpha1ExpressionWarning | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fieldRef': value.fieldRef,
        'warning': value.warning,
    };
}

