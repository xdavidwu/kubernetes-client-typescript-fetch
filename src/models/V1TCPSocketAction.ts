/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntOrString } from './IntOrString';
import {
    IntOrStringFromJSON,
    IntOrStringFromJSONTyped,
    IntOrStringToJSON,
} from './IntOrString';

/**
 * TCPSocketAction describes an action based on opening a socket
 * @export
 * @interface V1TCPSocketAction
 */
export interface V1TCPSocketAction {
    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     * @type {string}
     * @memberof V1TCPSocketAction
     */
    host?: string;
    /**
     * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
     * @type {IntOrString}
     * @memberof V1TCPSocketAction
     */
    port: IntOrString;
}

/**
 * Check if a given object implements the V1TCPSocketAction interface.
 */
export function instanceOfV1TCPSocketAction(value: object): value is V1TCPSocketAction {
    if (!('port' in value) || value['port'] === undefined) return false;
    return true;
}

export function V1TCPSocketActionFromJSON(json: any): V1TCPSocketAction {
    return V1TCPSocketActionFromJSONTyped(json, false);
}

export function V1TCPSocketActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1TCPSocketAction {
    if (json == null) {
        return json;
    }
    return {
        
        'host': json['host'] == null ? undefined : json['host'],
        'port': IntOrStringFromJSON(json['port']),
    };
}

export function V1TCPSocketActionToJSON(value?: V1TCPSocketAction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'host': value['host'],
        'port': IntOrStringToJSON(value['port']),
    };
}

