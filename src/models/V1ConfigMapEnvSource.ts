/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
 * 
 * The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
 * @export
 * @interface V1ConfigMapEnvSource
 */
export interface V1ConfigMapEnvSource {
    /**
     * Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof V1ConfigMapEnvSource
     */
    name?: string;
    /**
     * Specify whether the ConfigMap must be defined
     * @type {boolean}
     * @memberof V1ConfigMapEnvSource
     */
    optional?: boolean;
}

/**
 * Check if a given object implements the V1ConfigMapEnvSource interface.
 */
export function instanceOfV1ConfigMapEnvSource(value: object): value is V1ConfigMapEnvSource {
    return true;
}

export function V1ConfigMapEnvSourceFromJSON(json: any): V1ConfigMapEnvSource {
    return V1ConfigMapEnvSourceFromJSONTyped(json, false);
}

export function V1ConfigMapEnvSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ConfigMapEnvSource {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'optional': json['optional'] == null ? undefined : json['optional'],
    };
}

export function V1ConfigMapEnvSourceToJSON(value?: V1ConfigMapEnvSource | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'optional': value['optional'],
    };
}

