/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.28.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1CSIDriverSpec } from './V1CSIDriverSpec';
import {
    V1CSIDriverSpecFromJSON,
    V1CSIDriverSpecFromJSONTyped,
    V1CSIDriverSpecToJSON,
} from './V1CSIDriverSpec';
import type { V1ObjectMeta } from './V1ObjectMeta';
import {
    V1ObjectMetaFromJSON,
    V1ObjectMetaFromJSONTyped,
    V1ObjectMetaToJSON,
} from './V1ObjectMeta';

/**
 * CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.
 * @export
 * @interface V1CSIDriver
 */
export interface V1CSIDriver {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof V1CSIDriver
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof V1CSIDriver
     */
    kind?: string;
    /**
     * 
     * @type {V1ObjectMeta}
     * @memberof V1CSIDriver
     */
    metadata?: V1ObjectMeta;
    /**
     * 
     * @type {V1CSIDriverSpec}
     * @memberof V1CSIDriver
     */
    spec: V1CSIDriverSpec;
}

/**
 * Check if a given object implements the V1CSIDriver interface.
 */
export function instanceOfV1CSIDriver(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "spec" in value;

    return isInstance;
}

export function V1CSIDriverFromJSON(json: any): V1CSIDriver {
    return V1CSIDriverFromJSONTyped(json, false);
}

export function V1CSIDriverFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CSIDriver {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'metadata': !exists(json, 'metadata') ? undefined : V1ObjectMetaFromJSON(json['metadata']),
        'spec': V1CSIDriverSpecFromJSON(json['spec']),
    };
}

export function V1CSIDriverToJSON(value?: V1CSIDriver | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'kind': value.kind,
        'metadata': V1ObjectMetaToJSON(value.metadata),
        'spec': V1CSIDriverSpecToJSON(value.spec),
    };
}

