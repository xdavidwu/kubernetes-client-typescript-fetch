/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1DeleteOptions } from './V1DeleteOptions';
import {
    V1DeleteOptionsFromJSON,
    V1DeleteOptionsFromJSONTyped,
    V1DeleteOptionsToJSON,
} from './V1DeleteOptions';
import type { V1ObjectMeta } from './V1ObjectMeta';
import {
    V1ObjectMetaFromJSON,
    V1ObjectMetaFromJSONTyped,
    V1ObjectMetaToJSON,
} from './V1ObjectMeta';

/**
 * Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.
 * @export
 * @interface V1Eviction
 */
export interface V1Eviction {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof V1Eviction
     */
    apiVersion?: string;
    /**
     * 
     * @type {V1DeleteOptions}
     * @memberof V1Eviction
     */
    deleteOptions?: V1DeleteOptions;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof V1Eviction
     */
    kind?: string;
    /**
     * 
     * @type {V1ObjectMeta}
     * @memberof V1Eviction
     */
    metadata?: V1ObjectMeta;
}

/**
 * Check if a given object implements the V1Eviction interface.
 */
export function instanceOfV1Eviction(value: object): value is V1Eviction {
    return true;
}

export function V1EvictionFromJSON(json: any): V1Eviction {
    return V1EvictionFromJSONTyped(json, false);
}

export function V1EvictionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Eviction {
    if (json == null) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'deleteOptions': json['deleteOptions'] == null ? undefined : V1DeleteOptionsFromJSON(json['deleteOptions']),
        'kind': json['kind'] == null ? undefined : json['kind'],
        'metadata': json['metadata'] == null ? undefined : V1ObjectMetaFromJSON(json['metadata']),
    };
}

export function V1EvictionToJSON(value?: V1Eviction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'apiVersion': value['apiVersion'],
        'deleteOptions': V1DeleteOptionsToJSON(value['deleteOptions']),
        'kind': value['kind'],
        'metadata': V1ObjectMetaToJSON(value['metadata']),
    };
}

