/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * PersistentVolumeStatus is the current status of a persistent volume.
 * @export
 * @interface V1PersistentVolumeStatus
 */
export interface V1PersistentVolumeStatus {
    /**
     * lastPhaseTransitionTime is the time the phase transitioned from one to another and automatically resets to current time everytime a volume phase transitions. This is a beta field and requires the PersistentVolumeLastPhaseTransitionTime feature to be enabled (enabled by default).
     * @type {Date}
     * @memberof V1PersistentVolumeStatus
     */
    lastPhaseTransitionTime?: Date;
    /**
     * message is a human-readable message indicating details about why the volume is in this state.
     * @type {string}
     * @memberof V1PersistentVolumeStatus
     */
    message?: string;
    /**
     * phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
     * @type {string}
     * @memberof V1PersistentVolumeStatus
     */
    phase?: string;
    /**
     * reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
     * @type {string}
     * @memberof V1PersistentVolumeStatus
     */
    reason?: string;
}

/**
 * Check if a given object implements the V1PersistentVolumeStatus interface.
 */
export function instanceOfV1PersistentVolumeStatus(value: object): value is V1PersistentVolumeStatus {
    return true;
}

export function V1PersistentVolumeStatusFromJSON(json: any): V1PersistentVolumeStatus {
    return V1PersistentVolumeStatusFromJSONTyped(json, false);
}

export function V1PersistentVolumeStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PersistentVolumeStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'lastPhaseTransitionTime': json['lastPhaseTransitionTime'] == null ? undefined : (new Date(json['lastPhaseTransitionTime'])),
        'message': json['message'] == null ? undefined : json['message'],
        'phase': json['phase'] == null ? undefined : json['phase'],
        'reason': json['reason'] == null ? undefined : json['reason'],
    };
}

export function V1PersistentVolumeStatusToJSON(value?: V1PersistentVolumeStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'lastPhaseTransitionTime': value['lastPhaseTransitionTime'] == null ? undefined : ((value['lastPhaseTransitionTime']).toISOString()),
        'message': value['message'],
        'phase': value['phase'],
        'reason': value['reason'],
    };
}

