/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1ContainerStateRunning,
    V1ContainerStateRunningFromJSON,
    V1ContainerStateRunningFromJSONTyped,
    V1ContainerStateRunningToJSON,
    V1ContainerStateTerminated,
    V1ContainerStateTerminatedFromJSON,
    V1ContainerStateTerminatedFromJSONTyped,
    V1ContainerStateTerminatedToJSON,
    V1ContainerStateWaiting,
    V1ContainerStateWaitingFromJSON,
    V1ContainerStateWaitingFromJSONTyped,
    V1ContainerStateWaitingToJSON,
} from './';

/**
 * ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
 * @export
 * @interface V1ContainerState
 */
export interface V1ContainerState {
    /**
     * 
     * @type {V1ContainerStateRunning}
     * @memberof V1ContainerState
     */
    running?: V1ContainerStateRunning;
    /**
     * 
     * @type {V1ContainerStateTerminated}
     * @memberof V1ContainerState
     */
    terminated?: V1ContainerStateTerminated;
    /**
     * 
     * @type {V1ContainerStateWaiting}
     * @memberof V1ContainerState
     */
    waiting?: V1ContainerStateWaiting;
}

export function V1ContainerStateFromJSON(json: any): V1ContainerState {
    return V1ContainerStateFromJSONTyped(json, false);
}

export function V1ContainerStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ContainerState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'running': !exists(json, 'running') ? undefined : V1ContainerStateRunningFromJSON(json['running']),
        'terminated': !exists(json, 'terminated') ? undefined : V1ContainerStateTerminatedFromJSON(json['terminated']),
        'waiting': !exists(json, 'waiting') ? undefined : V1ContainerStateWaitingFromJSON(json['waiting']),
    };
}

export function V1ContainerStateToJSON(value?: V1ContainerState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'running': V1ContainerStateRunningToJSON(value.running),
        'terminated': V1ContainerStateTerminatedToJSON(value.terminated),
        'waiting': V1ContainerStateWaitingToJSON(value.waiting),
    };
}


