/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1beta2GroupSubject,
    V1beta2GroupSubjectFromJSON,
    V1beta2GroupSubjectFromJSONTyped,
    V1beta2GroupSubjectToJSON,
    V1beta2ServiceAccountSubject,
    V1beta2ServiceAccountSubjectFromJSON,
    V1beta2ServiceAccountSubjectFromJSONTyped,
    V1beta2ServiceAccountSubjectToJSON,
    V1beta2UserSubject,
    V1beta2UserSubjectFromJSON,
    V1beta2UserSubjectFromJSONTyped,
    V1beta2UserSubjectToJSON,
} from './';

/**
 * Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.
 * @export
 * @interface V1beta2Subject
 */
export interface V1beta2Subject {
    /**
     * 
     * @type {V1beta2GroupSubject}
     * @memberof V1beta2Subject
     */
    group?: V1beta2GroupSubject;
    /**
     * `kind` indicates which one of the other fields is non-empty. Required
     * @type {string}
     * @memberof V1beta2Subject
     */
    kind: string;
    /**
     * 
     * @type {V1beta2ServiceAccountSubject}
     * @memberof V1beta2Subject
     */
    serviceAccount?: V1beta2ServiceAccountSubject;
    /**
     * 
     * @type {V1beta2UserSubject}
     * @memberof V1beta2Subject
     */
    user?: V1beta2UserSubject;
}

export function V1beta2SubjectFromJSON(json: any): V1beta2Subject {
    return V1beta2SubjectFromJSONTyped(json, false);
}

export function V1beta2SubjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta2Subject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'group': !exists(json, 'group') ? undefined : V1beta2GroupSubjectFromJSON(json['group']),
        'kind': json['kind'],
        'serviceAccount': !exists(json, 'serviceAccount') ? undefined : V1beta2ServiceAccountSubjectFromJSON(json['serviceAccount']),
        'user': !exists(json, 'user') ? undefined : V1beta2UserSubjectFromJSON(json['user']),
    };
}

export function V1beta2SubjectToJSON(value?: V1beta2Subject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'group': V1beta2GroupSubjectToJSON(value.group),
        'kind': value.kind,
        'serviceAccount': V1beta2ServiceAccountSubjectToJSON(value.serviceAccount),
        'user': V1beta2UserSubjectToJSON(value.user),
    };
}


