/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1ObjectReference } from './V1ObjectReference';
import {
    V1ObjectReferenceFromJSON,
    V1ObjectReferenceFromJSONTyped,
    V1ObjectReferenceToJSON,
} from './V1ObjectReference';

/**
 * CronJobStatus represents the current state of a cron job.
 * @export
 * @interface V1beta1CronJobStatus
 */
export interface V1beta1CronJobStatus {
    /**
     * A list of pointers to currently running jobs.
     * @type {Array<V1ObjectReference>}
     * @memberof V1beta1CronJobStatus
     */
    active?: Array<V1ObjectReference>;
    /**
     * Information when was the last time the job was successfully scheduled.
     * @type {Date}
     * @memberof V1beta1CronJobStatus
     */
    lastScheduleTime?: Date;
    /**
     * Information when was the last time the job successfully completed.
     * @type {Date}
     * @memberof V1beta1CronJobStatus
     */
    lastSuccessfulTime?: Date;
}

/**
 * Check if a given object implements the V1beta1CronJobStatus interface.
 */
export function instanceOfV1beta1CronJobStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1beta1CronJobStatusFromJSON(json: any): V1beta1CronJobStatus {
    return V1beta1CronJobStatusFromJSONTyped(json, false);
}

export function V1beta1CronJobStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1CronJobStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': !exists(json, 'active') ? undefined : ((json['active'] as Array<any>).map(V1ObjectReferenceFromJSON)),
        'lastScheduleTime': !exists(json, 'lastScheduleTime') ? undefined : (new Date(json['lastScheduleTime'])),
        'lastSuccessfulTime': !exists(json, 'lastSuccessfulTime') ? undefined : (new Date(json['lastSuccessfulTime'])),
    };
}

export function V1beta1CronJobStatusToJSON(value?: V1beta1CronJobStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active === undefined ? undefined : ((value.active as Array<any>).map(V1ObjectReferenceToJSON)),
        'lastScheduleTime': value.lastScheduleTime === undefined ? undefined : (value.lastScheduleTime.toISOString()),
        'lastSuccessfulTime': value.lastSuccessfulTime === undefined ? undefined : (value.lastSuccessfulTime.toISOString()),
    };
}

