/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1alpha2ResourceRequest } from './V1alpha2ResourceRequest';
import {
    V1alpha2ResourceRequestFromJSON,
    V1alpha2ResourceRequestFromJSONTyped,
    V1alpha2ResourceRequestToJSON,
} from './V1alpha2ResourceRequest';

/**
 * DriverRequests describes all resources that are needed from one particular driver.
 * @export
 * @interface V1alpha2DriverRequests
 */
export interface V1alpha2DriverRequests {
    /**
     * DriverName is the name used by the DRA driver kubelet plugin.
     * @type {string}
     * @memberof V1alpha2DriverRequests
     */
    driverName?: string;
    /**
     * Requests describes all resources that are needed from the driver.
     * @type {Array<V1alpha2ResourceRequest>}
     * @memberof V1alpha2DriverRequests
     */
    requests?: Array<V1alpha2ResourceRequest>;
    /**
     * VendorParameters are arbitrary setup parameters for all requests of the claim. They are ignored while allocating the claim.
     * @type {object}
     * @memberof V1alpha2DriverRequests
     */
    vendorParameters?: object;
}

/**
 * Check if a given object implements the V1alpha2DriverRequests interface.
 */
export function instanceOfV1alpha2DriverRequests(value: object): value is V1alpha2DriverRequests {
    return true;
}

export function V1alpha2DriverRequestsFromJSON(json: any): V1alpha2DriverRequests {
    return V1alpha2DriverRequestsFromJSONTyped(json, false);
}

export function V1alpha2DriverRequestsFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha2DriverRequests {
    if (json == null) {
        return json;
    }
    return {
        
        'driverName': json['driverName'] == null ? undefined : json['driverName'],
        'requests': json['requests'] == null ? undefined : ((json['requests'] as Array<any>).map(V1alpha2ResourceRequestFromJSON)),
        'vendorParameters': json['vendorParameters'] == null ? undefined : json['vendorParameters'],
    };
}

export function V1alpha2DriverRequestsToJSON(value?: V1alpha2DriverRequests | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'driverName': value['driverName'],
        'requests': value['requests'] == null ? undefined : ((value['requests'] as Array<any>).map(V1alpha2ResourceRequestToJSON)),
        'vendorParameters': value['vendorParameters'],
    };
}

