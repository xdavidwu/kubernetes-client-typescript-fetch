/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1alpha2StructuredResourceHandle } from './V1alpha2StructuredResourceHandle';
import {
    V1alpha2StructuredResourceHandleFromJSON,
    V1alpha2StructuredResourceHandleFromJSONTyped,
    V1alpha2StructuredResourceHandleToJSON,
} from './V1alpha2StructuredResourceHandle';

/**
 * ResourceHandle holds opaque resource data for processing by a specific kubelet plugin.
 * @export
 * @interface V1alpha2ResourceHandle
 */
export interface V1alpha2ResourceHandle {
    /**
     * Data contains the opaque data associated with this ResourceHandle. It is set by the controller component of the resource driver whose name matches the DriverName set in the ResourceClaimStatus this ResourceHandle is embedded in. It is set at allocation time and is intended for processing by the kubelet plugin whose name matches the DriverName set in this ResourceHandle.
     * 
     * The maximum size of this field is 16KiB. This may get increased in the future, but not reduced.
     * @type {string}
     * @memberof V1alpha2ResourceHandle
     */
    data?: string;
    /**
     * DriverName specifies the name of the resource driver whose kubelet plugin should be invoked to process this ResourceHandle's data once it lands on a node. This may differ from the DriverName set in ResourceClaimStatus this ResourceHandle is embedded in.
     * @type {string}
     * @memberof V1alpha2ResourceHandle
     */
    driverName?: string;
    /**
     * 
     * @type {V1alpha2StructuredResourceHandle}
     * @memberof V1alpha2ResourceHandle
     */
    structuredData?: V1alpha2StructuredResourceHandle;
}

/**
 * Check if a given object implements the V1alpha2ResourceHandle interface.
 */
export function instanceOfV1alpha2ResourceHandle(value: object): value is V1alpha2ResourceHandle {
    return true;
}

export function V1alpha2ResourceHandleFromJSON(json: any): V1alpha2ResourceHandle {
    return V1alpha2ResourceHandleFromJSONTyped(json, false);
}

export function V1alpha2ResourceHandleFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha2ResourceHandle {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : json['data'],
        'driverName': json['driverName'] == null ? undefined : json['driverName'],
        'structuredData': json['structuredData'] == null ? undefined : V1alpha2StructuredResourceHandleFromJSON(json['structuredData']),
    };
}

export function V1alpha2ResourceHandleToJSON(value?: V1alpha2ResourceHandle | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': value['data'],
        'driverName': value['driverName'],
        'structuredData': V1alpha2StructuredResourceHandleToJSON(value['structuredData']),
    };
}

