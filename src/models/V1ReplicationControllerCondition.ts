/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.28.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * ReplicationControllerCondition describes the state of a replication controller at a certain point.
 * @export
 * @interface V1ReplicationControllerCondition
 */
export interface V1ReplicationControllerCondition {
    /**
     * The last time the condition transitioned from one status to another.
     * @type {Date}
     * @memberof V1ReplicationControllerCondition
     */
    lastTransitionTime?: Date;
    /**
     * A human readable message indicating details about the transition.
     * @type {string}
     * @memberof V1ReplicationControllerCondition
     */
    message?: string;
    /**
     * The reason for the condition's last transition.
     * @type {string}
     * @memberof V1ReplicationControllerCondition
     */
    reason?: string;
    /**
     * Status of the condition, one of True, False, Unknown.
     * @type {string}
     * @memberof V1ReplicationControllerCondition
     */
    status: string;
    /**
     * Type of replication controller condition.
     * @type {string}
     * @memberof V1ReplicationControllerCondition
     */
    type: string;
}

/**
 * Check if a given object implements the V1ReplicationControllerCondition interface.
 */
export function instanceOfV1ReplicationControllerCondition(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function V1ReplicationControllerConditionFromJSON(json: any): V1ReplicationControllerCondition {
    return V1ReplicationControllerConditionFromJSONTyped(json, false);
}

export function V1ReplicationControllerConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ReplicationControllerCondition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastTransitionTime': !exists(json, 'lastTransitionTime') ? undefined : (new Date(json['lastTransitionTime'])),
        'message': !exists(json, 'message') ? undefined : json['message'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'status': json['status'],
        'type': json['type'],
    };
}

export function V1ReplicationControllerConditionToJSON(value?: V1ReplicationControllerCondition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastTransitionTime': value.lastTransitionTime === undefined ? undefined : (value.lastTransitionTime.toISOString()),
        'message': value.message,
        'reason': value.reason,
        'status': value.status,
        'type': value.type,
    };
}

