/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1VolumeError } from './V1VolumeError';
import {
    V1VolumeErrorFromJSON,
    V1VolumeErrorFromJSONTyped,
    V1VolumeErrorToJSON,
} from './V1VolumeError';

/**
 * VolumeAttachmentStatus is the status of a VolumeAttachment request.
 * @export
 * @interface V1VolumeAttachmentStatus
 */
export interface V1VolumeAttachmentStatus {
    /**
     * 
     * @type {V1VolumeError}
     * @memberof V1VolumeAttachmentStatus
     */
    attachError?: V1VolumeError;
    /**
     * attached indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * @type {boolean}
     * @memberof V1VolumeAttachmentStatus
     */
    attached: boolean;
    /**
     * attachmentMetadata is populated with any information returned by the attach operation, upon successful attach, that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * @type {{ [key: string]: string; }}
     * @memberof V1VolumeAttachmentStatus
     */
    attachmentMetadata?: { [key: string]: string; };
    /**
     * 
     * @type {V1VolumeError}
     * @memberof V1VolumeAttachmentStatus
     */
    detachError?: V1VolumeError;
}

/**
 * Check if a given object implements the V1VolumeAttachmentStatus interface.
 */
export function instanceOfV1VolumeAttachmentStatus(value: object): value is V1VolumeAttachmentStatus {
    if (!('attached' in value) || value['attached'] === undefined) return false;
    return true;
}

export function V1VolumeAttachmentStatusFromJSON(json: any): V1VolumeAttachmentStatus {
    return V1VolumeAttachmentStatusFromJSONTyped(json, false);
}

export function V1VolumeAttachmentStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1VolumeAttachmentStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'attachError': json['attachError'] == null ? undefined : V1VolumeErrorFromJSON(json['attachError']),
        'attached': json['attached'],
        'attachmentMetadata': json['attachmentMetadata'] == null ? undefined : json['attachmentMetadata'],
        'detachError': json['detachError'] == null ? undefined : V1VolumeErrorFromJSON(json['detachError']),
    };
}

export function V1VolumeAttachmentStatusToJSON(value?: V1VolumeAttachmentStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attachError': V1VolumeErrorToJSON(value['attachError']),
        'attached': value['attached'],
        'attachmentMetadata': value['attachmentMetadata'],
        'detachError': V1VolumeErrorToJSON(value['detachError']),
    };
}

