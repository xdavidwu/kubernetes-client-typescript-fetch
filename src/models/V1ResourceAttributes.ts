/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
 * @export
 * @interface V1ResourceAttributes
 */
export interface V1ResourceAttributes {
    /**
     * Group is the API Group of the Resource.  "*" means all.
     * @type {string}
     * @memberof V1ResourceAttributes
     */
    group?: string;
    /**
     * Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
     * @type {string}
     * @memberof V1ResourceAttributes
     */
    name?: string;
    /**
     * Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
     * @type {string}
     * @memberof V1ResourceAttributes
     */
    namespace?: string;
    /**
     * Resource is one of the existing resource types.  "*" means all.
     * @type {string}
     * @memberof V1ResourceAttributes
     */
    resource?: string;
    /**
     * Subresource is one of the existing resource types.  "" means none.
     * @type {string}
     * @memberof V1ResourceAttributes
     */
    subresource?: string;
    /**
     * Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
     * @type {string}
     * @memberof V1ResourceAttributes
     */
    verb?: string;
    /**
     * Version is the API Version of the Resource.  "*" means all.
     * @type {string}
     * @memberof V1ResourceAttributes
     */
    version?: string;
}

/**
 * Check if a given object implements the V1ResourceAttributes interface.
 */
export function instanceOfV1ResourceAttributes(value: object): value is V1ResourceAttributes {
    return true;
}

export function V1ResourceAttributesFromJSON(json: any): V1ResourceAttributes {
    return V1ResourceAttributesFromJSONTyped(json, false);
}

export function V1ResourceAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ResourceAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'group': json['group'] == null ? undefined : json['group'],
        'name': json['name'] == null ? undefined : json['name'],
        'namespace': json['namespace'] == null ? undefined : json['namespace'],
        'resource': json['resource'] == null ? undefined : json['resource'],
        'subresource': json['subresource'] == null ? undefined : json['subresource'],
        'verb': json['verb'] == null ? undefined : json['verb'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function V1ResourceAttributesToJSON(value?: V1ResourceAttributes | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'group': value['group'],
        'name': value['name'],
        'namespace': value['namespace'],
        'resource': value['resource'],
        'subresource': value['subresource'],
        'verb': value['verb'],
        'version': value['version'],
    };
}

