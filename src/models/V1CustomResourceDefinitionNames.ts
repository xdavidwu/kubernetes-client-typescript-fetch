/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
 * @export
 * @interface V1CustomResourceDefinitionNames
 */
export interface V1CustomResourceDefinitionNames {
    /**
     * categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
     * @type {Array<string>}
     * @memberof V1CustomResourceDefinitionNames
     */
    categories?: Array<string>;
    /**
     * kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
     * @type {string}
     * @memberof V1CustomResourceDefinitionNames
     */
    kind: string;
    /**
     * listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
     * @type {string}
     * @memberof V1CustomResourceDefinitionNames
     */
    listKind?: string;
    /**
     * plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
     * @type {string}
     * @memberof V1CustomResourceDefinitionNames
     */
    plural: string;
    /**
     * shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
     * @type {Array<string>}
     * @memberof V1CustomResourceDefinitionNames
     */
    shortNames?: Array<string>;
    /**
     * singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
     * @type {string}
     * @memberof V1CustomResourceDefinitionNames
     */
    singular?: string;
}

/**
 * Check if a given object implements the V1CustomResourceDefinitionNames interface.
 */
export function instanceOfV1CustomResourceDefinitionNames(value: object): value is V1CustomResourceDefinitionNames {
    if (!('kind' in value) || value['kind'] === undefined) return false;
    if (!('plural' in value) || value['plural'] === undefined) return false;
    return true;
}

export function V1CustomResourceDefinitionNamesFromJSON(json: any): V1CustomResourceDefinitionNames {
    return V1CustomResourceDefinitionNamesFromJSONTyped(json, false);
}

export function V1CustomResourceDefinitionNamesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CustomResourceDefinitionNames {
    if (json == null) {
        return json;
    }
    return {
        
        'categories': json['categories'] == null ? undefined : json['categories'],
        'kind': json['kind'],
        'listKind': json['listKind'] == null ? undefined : json['listKind'],
        'plural': json['plural'],
        'shortNames': json['shortNames'] == null ? undefined : json['shortNames'],
        'singular': json['singular'] == null ? undefined : json['singular'],
    };
}

export function V1CustomResourceDefinitionNamesToJSON(value?: V1CustomResourceDefinitionNames | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'categories': value['categories'],
        'kind': value['kind'],
        'listKind': value['listKind'],
        'plural': value['plural'],
        'shortNames': value['shortNames'],
        'singular': value['singular'],
    };
}

