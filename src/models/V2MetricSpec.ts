/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V2ContainerResourceMetricSource,
    V2ContainerResourceMetricSourceFromJSON,
    V2ContainerResourceMetricSourceFromJSONTyped,
    V2ContainerResourceMetricSourceToJSON,
    V2ExternalMetricSource,
    V2ExternalMetricSourceFromJSON,
    V2ExternalMetricSourceFromJSONTyped,
    V2ExternalMetricSourceToJSON,
    V2ObjectMetricSource,
    V2ObjectMetricSourceFromJSON,
    V2ObjectMetricSourceFromJSONTyped,
    V2ObjectMetricSourceToJSON,
    V2PodsMetricSource,
    V2PodsMetricSourceFromJSON,
    V2PodsMetricSourceFromJSONTyped,
    V2PodsMetricSourceToJSON,
    V2ResourceMetricSource,
    V2ResourceMetricSourceFromJSON,
    V2ResourceMetricSourceFromJSONTyped,
    V2ResourceMetricSourceToJSON,
} from './';

/**
 * MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
 * @export
 * @interface V2MetricSpec
 */
export interface V2MetricSpec {
    /**
     * 
     * @type {V2ContainerResourceMetricSource}
     * @memberof V2MetricSpec
     */
    containerResource?: V2ContainerResourceMetricSource;
    /**
     * 
     * @type {V2ExternalMetricSource}
     * @memberof V2MetricSpec
     */
    external?: V2ExternalMetricSource;
    /**
     * 
     * @type {V2ObjectMetricSource}
     * @memberof V2MetricSpec
     */
    object?: V2ObjectMetricSource;
    /**
     * 
     * @type {V2PodsMetricSource}
     * @memberof V2MetricSpec
     */
    pods?: V2PodsMetricSource;
    /**
     * 
     * @type {V2ResourceMetricSource}
     * @memberof V2MetricSpec
     */
    resource?: V2ResourceMetricSource;
    /**
     * type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled
     * @type {string}
     * @memberof V2MetricSpec
     */
    type: string;
}

export function V2MetricSpecFromJSON(json: any): V2MetricSpec {
    return V2MetricSpecFromJSONTyped(json, false);
}

export function V2MetricSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2MetricSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'containerResource': !exists(json, 'containerResource') ? undefined : V2ContainerResourceMetricSourceFromJSON(json['containerResource']),
        'external': !exists(json, 'external') ? undefined : V2ExternalMetricSourceFromJSON(json['external']),
        'object': !exists(json, 'object') ? undefined : V2ObjectMetricSourceFromJSON(json['object']),
        'pods': !exists(json, 'pods') ? undefined : V2PodsMetricSourceFromJSON(json['pods']),
        'resource': !exists(json, 'resource') ? undefined : V2ResourceMetricSourceFromJSON(json['resource']),
        'type': json['type'],
    };
}

export function V2MetricSpecToJSON(value?: V2MetricSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'containerResource': V2ContainerResourceMetricSourceToJSON(value.containerResource),
        'external': V2ExternalMetricSourceToJSON(value.external),
        'object': V2ObjectMetricSourceToJSON(value.object),
        'pods': V2PodsMetricSourceToJSON(value.pods),
        'resource': V2ResourceMetricSourceToJSON(value.resource),
        'type': value.type,
    };
}


