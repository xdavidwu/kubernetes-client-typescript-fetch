/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V2CrossVersionObjectReference,
    V2CrossVersionObjectReferenceFromJSON,
    V2CrossVersionObjectReferenceFromJSONTyped,
    V2CrossVersionObjectReferenceToJSON,
    V2MetricIdentifier,
    V2MetricIdentifierFromJSON,
    V2MetricIdentifierFromJSONTyped,
    V2MetricIdentifierToJSON,
    V2MetricValueStatus,
    V2MetricValueStatusFromJSON,
    V2MetricValueStatusFromJSONTyped,
    V2MetricValueStatusToJSON,
} from './';

/**
 * ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
 * @export
 * @interface V2ObjectMetricStatus
 */
export interface V2ObjectMetricStatus {
    /**
     * 
     * @type {V2MetricValueStatus}
     * @memberof V2ObjectMetricStatus
     */
    current: V2MetricValueStatus;
    /**
     * 
     * @type {V2CrossVersionObjectReference}
     * @memberof V2ObjectMetricStatus
     */
    describedObject: V2CrossVersionObjectReference;
    /**
     * 
     * @type {V2MetricIdentifier}
     * @memberof V2ObjectMetricStatus
     */
    metric: V2MetricIdentifier;
}

export function V2ObjectMetricStatusFromJSON(json: any): V2ObjectMetricStatus {
    return V2ObjectMetricStatusFromJSONTyped(json, false);
}

export function V2ObjectMetricStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2ObjectMetricStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'current': V2MetricValueStatusFromJSON(json['current']),
        'describedObject': V2CrossVersionObjectReferenceFromJSON(json['describedObject']),
        'metric': V2MetricIdentifierFromJSON(json['metric']),
    };
}

export function V2ObjectMetricStatusToJSON(value?: V2ObjectMetricStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'current': V2MetricValueStatusToJSON(value.current),
        'describedObject': V2CrossVersionObjectReferenceToJSON(value.describedObject),
        'metric': V2MetricIdentifierToJSON(value.metric),
    };
}


