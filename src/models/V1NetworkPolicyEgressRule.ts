/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1NetworkPolicyPeer } from './V1NetworkPolicyPeer';
import {
    V1NetworkPolicyPeerFromJSON,
    V1NetworkPolicyPeerFromJSONTyped,
    V1NetworkPolicyPeerToJSON,
} from './V1NetworkPolicyPeer';
import type { V1NetworkPolicyPort } from './V1NetworkPolicyPort';
import {
    V1NetworkPolicyPortFromJSON,
    V1NetworkPolicyPortFromJSONTyped,
    V1NetworkPolicyPortToJSON,
} from './V1NetworkPolicyPort';

/**
 * NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
 * @export
 * @interface V1NetworkPolicyEgressRule
 */
export interface V1NetworkPolicyEgressRule {
    /**
     * List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
     * @type {Array<V1NetworkPolicyPort>}
     * @memberof V1NetworkPolicyEgressRule
     */
    ports?: Array<V1NetworkPolicyPort>;
    /**
     * List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
     * @type {Array<V1NetworkPolicyPeer>}
     * @memberof V1NetworkPolicyEgressRule
     */
    to?: Array<V1NetworkPolicyPeer>;
}

/**
 * Check if a given object implements the V1NetworkPolicyEgressRule interface.
 */
export function instanceOfV1NetworkPolicyEgressRule(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1NetworkPolicyEgressRuleFromJSON(json: any): V1NetworkPolicyEgressRule {
    return V1NetworkPolicyEgressRuleFromJSONTyped(json, false);
}

export function V1NetworkPolicyEgressRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1NetworkPolicyEgressRule {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ports': !exists(json, 'ports') ? undefined : ((json['ports'] as Array<any>).map(V1NetworkPolicyPortFromJSON)),
        'to': !exists(json, 'to') ? undefined : ((json['to'] as Array<any>).map(V1NetworkPolicyPeerFromJSON)),
    };
}

export function V1NetworkPolicyEgressRuleToJSON(value?: V1NetworkPolicyEgressRule | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ports': value.ports === undefined ? undefined : ((value.ports as Array<any>).map(V1NetworkPolicyPortToJSON)),
        'to': value.to === undefined ? undefined : ((value.to as Array<any>).map(V1NetworkPolicyPeerToJSON)),
    };
}

