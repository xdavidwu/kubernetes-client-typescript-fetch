/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1alpha2NamedResourcesAttribute } from './V1alpha2NamedResourcesAttribute';
import {
    V1alpha2NamedResourcesAttributeFromJSON,
    V1alpha2NamedResourcesAttributeFromJSONTyped,
    V1alpha2NamedResourcesAttributeToJSON,
} from './V1alpha2NamedResourcesAttribute';

/**
 * NamedResourcesInstance represents one individual hardware instance that can be selected based on its attributes.
 * @export
 * @interface V1alpha2NamedResourcesInstance
 */
export interface V1alpha2NamedResourcesInstance {
    /**
     * Attributes defines the attributes of this resource instance. The name of each attribute must be unique.
     * @type {Array<V1alpha2NamedResourcesAttribute>}
     * @memberof V1alpha2NamedResourcesInstance
     */
    attributes?: Array<V1alpha2NamedResourcesAttribute>;
    /**
     * Name is unique identifier among all resource instances managed by the driver on the node. It must be a DNS subdomain.
     * @type {string}
     * @memberof V1alpha2NamedResourcesInstance
     */
    name: string;
}

/**
 * Check if a given object implements the V1alpha2NamedResourcesInstance interface.
 */
export function instanceOfV1alpha2NamedResourcesInstance(value: object): value is V1alpha2NamedResourcesInstance {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function V1alpha2NamedResourcesInstanceFromJSON(json: any): V1alpha2NamedResourcesInstance {
    return V1alpha2NamedResourcesInstanceFromJSONTyped(json, false);
}

export function V1alpha2NamedResourcesInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha2NamedResourcesInstance {
    if (json == null) {
        return json;
    }
    return {
        
        'attributes': json['attributes'] == null ? undefined : ((json['attributes'] as Array<any>).map(V1alpha2NamedResourcesAttributeFromJSON)),
        'name': json['name'],
    };
}

export function V1alpha2NamedResourcesInstanceToJSON(value?: V1alpha2NamedResourcesInstance | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attributes': value['attributes'] == null ? undefined : ((value['attributes'] as Array<any>).map(V1alpha2NamedResourcesAttributeToJSON)),
        'name': value['name'],
    };
}

