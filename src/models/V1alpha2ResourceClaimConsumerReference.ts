/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ResourceClaimConsumerReference contains enough information to let you locate the consumer of a ResourceClaim. The user must be a resource in the same namespace as the ResourceClaim.
 * @export
 * @interface V1alpha2ResourceClaimConsumerReference
 */
export interface V1alpha2ResourceClaimConsumerReference {
    /**
     * APIGroup is the group for the resource being referenced. It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.
     * @type {string}
     * @memberof V1alpha2ResourceClaimConsumerReference
     */
    apiGroup?: string;
    /**
     * Name is the name of resource being referenced.
     * @type {string}
     * @memberof V1alpha2ResourceClaimConsumerReference
     */
    name: string;
    /**
     * Resource is the type of resource being referenced, for example "pods".
     * @type {string}
     * @memberof V1alpha2ResourceClaimConsumerReference
     */
    resource: string;
    /**
     * UID identifies exactly one incarnation of the resource.
     * @type {string}
     * @memberof V1alpha2ResourceClaimConsumerReference
     */
    uid: string;
}

/**
 * Check if a given object implements the V1alpha2ResourceClaimConsumerReference interface.
 */
export function instanceOfV1alpha2ResourceClaimConsumerReference(value: object): value is V1alpha2ResourceClaimConsumerReference {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('resource' in value) || value['resource'] === undefined) return false;
    if (!('uid' in value) || value['uid'] === undefined) return false;
    return true;
}

export function V1alpha2ResourceClaimConsumerReferenceFromJSON(json: any): V1alpha2ResourceClaimConsumerReference {
    return V1alpha2ResourceClaimConsumerReferenceFromJSONTyped(json, false);
}

export function V1alpha2ResourceClaimConsumerReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha2ResourceClaimConsumerReference {
    if (json == null) {
        return json;
    }
    return {
        
        'apiGroup': json['apiGroup'] == null ? undefined : json['apiGroup'],
        'name': json['name'],
        'resource': json['resource'],
        'uid': json['uid'],
    };
}

export function V1alpha2ResourceClaimConsumerReferenceToJSON(value?: V1alpha2ResourceClaimConsumerReference | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'apiGroup': value['apiGroup'],
        'name': value['name'],
        'resource': value['resource'],
        'uid': value['uid'],
    };
}

