/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1CustomResourceConversion,
    V1CustomResourceConversionFromJSON,
    V1CustomResourceConversionFromJSONTyped,
    V1CustomResourceConversionToJSON,
    V1CustomResourceDefinitionNames,
    V1CustomResourceDefinitionNamesFromJSON,
    V1CustomResourceDefinitionNamesFromJSONTyped,
    V1CustomResourceDefinitionNamesToJSON,
    V1CustomResourceDefinitionVersion,
    V1CustomResourceDefinitionVersionFromJSON,
    V1CustomResourceDefinitionVersionFromJSONTyped,
    V1CustomResourceDefinitionVersionToJSON,
} from './';

/**
 * CustomResourceDefinitionSpec describes how a user wants their resource to appear
 * @export
 * @interface V1CustomResourceDefinitionSpec
 */
export interface V1CustomResourceDefinitionSpec {
    /**
     * 
     * @type {V1CustomResourceConversion}
     * @memberof V1CustomResourceDefinitionSpec
     */
    conversion?: V1CustomResourceConversion;
    /**
     * group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
     * @type {string}
     * @memberof V1CustomResourceDefinitionSpec
     */
    group: string;
    /**
     * 
     * @type {V1CustomResourceDefinitionNames}
     * @memberof V1CustomResourceDefinitionSpec
     */
    names: V1CustomResourceDefinitionNames;
    /**
     * preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
     * @type {boolean}
     * @memberof V1CustomResourceDefinitionSpec
     */
    preserveUnknownFields?: boolean;
    /**
     * scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
     * @type {string}
     * @memberof V1CustomResourceDefinitionSpec
     */
    scope: string;
    /**
     * versions is the list of all API versions of the defined custom resource. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
     * @type {Array<V1CustomResourceDefinitionVersion>}
     * @memberof V1CustomResourceDefinitionSpec
     */
    versions: Array<V1CustomResourceDefinitionVersion>;
}

export function V1CustomResourceDefinitionSpecFromJSON(json: any): V1CustomResourceDefinitionSpec {
    return V1CustomResourceDefinitionSpecFromJSONTyped(json, false);
}

export function V1CustomResourceDefinitionSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CustomResourceDefinitionSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conversion': !exists(json, 'conversion') ? undefined : V1CustomResourceConversionFromJSON(json['conversion']),
        'group': json['group'],
        'names': V1CustomResourceDefinitionNamesFromJSON(json['names']),
        'preserveUnknownFields': !exists(json, 'preserveUnknownFields') ? undefined : json['preserveUnknownFields'],
        'scope': json['scope'],
        'versions': ((json['versions'] as Array<any>).map(V1CustomResourceDefinitionVersionFromJSON)),
    };
}

export function V1CustomResourceDefinitionSpecToJSON(value?: V1CustomResourceDefinitionSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conversion': V1CustomResourceConversionToJSON(value.conversion),
        'group': value.group,
        'names': V1CustomResourceDefinitionNamesToJSON(value.names),
        'preserveUnknownFields': value.preserveUnknownFields,
        'scope': value.scope,
        'versions': ((value.versions as Array<any>).map(V1CustomResourceDefinitionVersionToJSON)),
    };
}


