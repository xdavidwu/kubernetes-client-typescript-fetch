/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1TypedObjectReference
 */
export interface V1TypedObjectReference {
    /**
     * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
     * @type {string}
     * @memberof V1TypedObjectReference
     */
    apiGroup?: string;
    /**
     * Kind is the type of resource being referenced
     * @type {string}
     * @memberof V1TypedObjectReference
     */
    kind: string;
    /**
     * Name is the name of resource being referenced
     * @type {string}
     * @memberof V1TypedObjectReference
     */
    name: string;
    /**
     * Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
     * @type {string}
     * @memberof V1TypedObjectReference
     */
    namespace?: string;
}

/**
 * Check if a given object implements the V1TypedObjectReference interface.
 */
export function instanceOfV1TypedObjectReference(value: object): value is V1TypedObjectReference {
    if (!('kind' in value) || value['kind'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function V1TypedObjectReferenceFromJSON(json: any): V1TypedObjectReference {
    return V1TypedObjectReferenceFromJSONTyped(json, false);
}

export function V1TypedObjectReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1TypedObjectReference {
    if (json == null) {
        return json;
    }
    return {
        
        'apiGroup': json['apiGroup'] == null ? undefined : json['apiGroup'],
        'kind': json['kind'],
        'name': json['name'],
        'namespace': json['namespace'] == null ? undefined : json['namespace'],
    };
}

export function V1TypedObjectReferenceToJSON(value?: V1TypedObjectReference | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'apiGroup': value['apiGroup'],
        'kind': value['kind'],
        'name': value['name'],
        'namespace': value['namespace'],
    };
}

