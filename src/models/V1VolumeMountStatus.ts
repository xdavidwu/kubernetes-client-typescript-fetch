/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * VolumeMountStatus shows status of volume mounts.
 * @export
 * @interface V1VolumeMountStatus
 */
export interface V1VolumeMountStatus {
    /**
     * MountPath corresponds to the original VolumeMount.
     * @type {string}
     * @memberof V1VolumeMountStatus
     */
    mountPath: string;
    /**
     * Name corresponds to the name of the original VolumeMount.
     * @type {string}
     * @memberof V1VolumeMountStatus
     */
    name: string;
    /**
     * ReadOnly corresponds to the original VolumeMount.
     * @type {boolean}
     * @memberof V1VolumeMountStatus
     */
    readOnly?: boolean;
    /**
     * RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts). An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled, depending on the mount result.
     * @type {string}
     * @memberof V1VolumeMountStatus
     */
    recursiveReadOnly?: string;
}

/**
 * Check if a given object implements the V1VolumeMountStatus interface.
 */
export function instanceOfV1VolumeMountStatus(value: object): value is V1VolumeMountStatus {
    if (!('mountPath' in value) || value['mountPath'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function V1VolumeMountStatusFromJSON(json: any): V1VolumeMountStatus {
    return V1VolumeMountStatusFromJSONTyped(json, false);
}

export function V1VolumeMountStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1VolumeMountStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'mountPath': json['mountPath'],
        'name': json['name'],
        'readOnly': json['readOnly'] == null ? undefined : json['readOnly'],
        'recursiveReadOnly': json['recursiveReadOnly'] == null ? undefined : json['recursiveReadOnly'],
    };
}

export function V1VolumeMountStatusToJSON(value?: V1VolumeMountStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'mountPath': value['mountPath'],
        'name': value['name'],
        'readOnly': value['readOnly'],
        'recursiveReadOnly': value['recursiveReadOnly'],
    };
}

