/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.28.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * ParentReference describes a reference to a parent object.
 * @export
 * @interface V1alpha1ParentReference
 */
export interface V1alpha1ParentReference {
    /**
     * Group is the group of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    group?: string;
    /**
     * Name is the name of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    name?: string;
    /**
     * Namespace is the namespace of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    namespace?: string;
    /**
     * Resource is the resource of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    resource?: string;
    /**
     * UID is the uid of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    uid?: string;
}

/**
 * Check if a given object implements the V1alpha1ParentReference interface.
 */
export function instanceOfV1alpha1ParentReference(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1alpha1ParentReferenceFromJSON(json: any): V1alpha1ParentReference {
    return V1alpha1ParentReferenceFromJSONTyped(json, false);
}

export function V1alpha1ParentReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1ParentReference {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'group': !exists(json, 'group') ? undefined : json['group'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'namespace': !exists(json, 'namespace') ? undefined : json['namespace'],
        'resource': !exists(json, 'resource') ? undefined : json['resource'],
        'uid': !exists(json, 'uid') ? undefined : json['uid'],
    };
}

export function V1alpha1ParentReferenceToJSON(value?: V1alpha1ParentReference | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'group': value.group,
        'name': value.name,
        'namespace': value.namespace,
        'resource': value.resource,
        'uid': value.uid,
    };
}

