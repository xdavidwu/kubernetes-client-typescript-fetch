/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ParentReference describes a reference to a parent object.
 * @export
 * @interface V1alpha1ParentReference
 */
export interface V1alpha1ParentReference {
    /**
     * Group is the group of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    group?: string;
    /**
     * Name is the name of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    name: string;
    /**
     * Namespace is the namespace of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    namespace?: string;
    /**
     * Resource is the resource of the object being referenced.
     * @type {string}
     * @memberof V1alpha1ParentReference
     */
    resource: string;
}

/**
 * Check if a given object implements the V1alpha1ParentReference interface.
 */
export function instanceOfV1alpha1ParentReference(value: object): value is V1alpha1ParentReference {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('resource' in value) || value['resource'] === undefined) return false;
    return true;
}

export function V1alpha1ParentReferenceFromJSON(json: any): V1alpha1ParentReference {
    return V1alpha1ParentReferenceFromJSONTyped(json, false);
}

export function V1alpha1ParentReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1ParentReference {
    if (json == null) {
        return json;
    }
    return {
        
        'group': json['group'] == null ? undefined : json['group'],
        'name': json['name'],
        'namespace': json['namespace'] == null ? undefined : json['namespace'],
        'resource': json['resource'],
    };
}

export function V1alpha1ParentReferenceToJSON(value?: V1alpha1ParentReference | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'group': value['group'],
        'name': value['name'],
        'namespace': value['namespace'],
        'resource': value['resource'],
    };
}

