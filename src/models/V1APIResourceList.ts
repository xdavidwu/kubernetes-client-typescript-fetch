/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1APIResource } from './V1APIResource';
import {
    V1APIResourceFromJSON,
    V1APIResourceFromJSONTyped,
    V1APIResourceToJSON,
} from './V1APIResource';

/**
 * APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.
 * @export
 * @interface V1APIResourceList
 */
export interface V1APIResourceList {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof V1APIResourceList
     */
    apiVersion?: string;
    /**
     * groupVersion is the group and version this APIResourceList is for.
     * @type {string}
     * @memberof V1APIResourceList
     */
    groupVersion: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof V1APIResourceList
     */
    kind?: string;
    /**
     * resources contains the name of the resources and if they are namespaced.
     * @type {Array<V1APIResource>}
     * @memberof V1APIResourceList
     */
    resources: Array<V1APIResource>;
}

/**
 * Check if a given object implements the V1APIResourceList interface.
 */
export function instanceOfV1APIResourceList(value: object): value is V1APIResourceList {
    if (!('groupVersion' in value) || value['groupVersion'] === undefined) return false;
    if (!('resources' in value) || value['resources'] === undefined) return false;
    return true;
}

export function V1APIResourceListFromJSON(json: any): V1APIResourceList {
    return V1APIResourceListFromJSONTyped(json, false);
}

export function V1APIResourceListFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1APIResourceList {
    if (json == null) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'groupVersion': json['groupVersion'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'resources': ((json['resources'] as Array<any>).map(V1APIResourceFromJSON)),
    };
}

export function V1APIResourceListToJSON(value?: V1APIResourceList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'apiVersion': value['apiVersion'],
        'groupVersion': value['groupVersion'],
        'kind': value['kind'],
        'resources': ((value['resources'] as Array<any>).map(V1APIResourceToJSON)),
    };
}

