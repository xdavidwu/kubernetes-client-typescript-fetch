/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1NetworkPolicyPeer } from './V1NetworkPolicyPeer';
import {
    V1NetworkPolicyPeerFromJSON,
    V1NetworkPolicyPeerFromJSONTyped,
    V1NetworkPolicyPeerToJSON,
} from './V1NetworkPolicyPeer';
import type { V1NetworkPolicyPort } from './V1NetworkPolicyPort';
import {
    V1NetworkPolicyPortFromJSON,
    V1NetworkPolicyPortFromJSONTyped,
    V1NetworkPolicyPortToJSON,
} from './V1NetworkPolicyPort';

/**
 * NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
 * @export
 * @interface V1NetworkPolicyIngressRule
 */
export interface V1NetworkPolicyIngressRule {
    /**
     * from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
     * @type {Array<V1NetworkPolicyPeer>}
     * @memberof V1NetworkPolicyIngressRule
     */
    from?: Array<V1NetworkPolicyPeer>;
    /**
     * ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
     * @type {Array<V1NetworkPolicyPort>}
     * @memberof V1NetworkPolicyIngressRule
     */
    ports?: Array<V1NetworkPolicyPort>;
}

/**
 * Check if a given object implements the V1NetworkPolicyIngressRule interface.
 */
export function instanceOfV1NetworkPolicyIngressRule(value: object): value is V1NetworkPolicyIngressRule {
    return true;
}

export function V1NetworkPolicyIngressRuleFromJSON(json: any): V1NetworkPolicyIngressRule {
    return V1NetworkPolicyIngressRuleFromJSONTyped(json, false);
}

export function V1NetworkPolicyIngressRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1NetworkPolicyIngressRule {
    if (json == null) {
        return json;
    }
    return {
        
        'from': json['from'] == null ? undefined : ((json['from'] as Array<any>).map(V1NetworkPolicyPeerFromJSON)),
        'ports': json['ports'] == null ? undefined : ((json['ports'] as Array<any>).map(V1NetworkPolicyPortFromJSON)),
    };
}

export function V1NetworkPolicyIngressRuleToJSON(value?: V1NetworkPolicyIngressRule | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'from': value['from'] == null ? undefined : ((value['from'] as Array<any>).map(V1NetworkPolicyPeerToJSON)),
        'ports': value['ports'] == null ? undefined : ((value['ports'] as Array<any>).map(V1NetworkPolicyPortToJSON)),
    };
}

