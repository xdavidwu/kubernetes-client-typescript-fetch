/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1NamespaceCondition } from './V1NamespaceCondition';
import {
    V1NamespaceConditionFromJSON,
    V1NamespaceConditionFromJSONTyped,
    V1NamespaceConditionToJSON,
} from './V1NamespaceCondition';

/**
 * NamespaceStatus is information about the current status of a Namespace.
 * @export
 * @interface V1NamespaceStatus
 */
export interface V1NamespaceStatus {
    /**
     * Represents the latest available observations of a namespace's current state.
     * @type {Array<V1NamespaceCondition>}
     * @memberof V1NamespaceStatus
     */
    conditions?: Array<V1NamespaceCondition>;
    /**
     * Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
     * @type {string}
     * @memberof V1NamespaceStatus
     */
    phase?: string;
}

/**
 * Check if a given object implements the V1NamespaceStatus interface.
 */
export function instanceOfV1NamespaceStatus(value: object): value is V1NamespaceStatus {
    return true;
}

export function V1NamespaceStatusFromJSON(json: any): V1NamespaceStatus {
    return V1NamespaceStatusFromJSONTyped(json, false);
}

export function V1NamespaceStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1NamespaceStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'conditions': json['conditions'] == null ? undefined : ((json['conditions'] as Array<any>).map(V1NamespaceConditionFromJSON)),
        'phase': json['phase'] == null ? undefined : json['phase'],
    };
}

export function V1NamespaceStatusToJSON(value?: V1NamespaceStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'conditions': value['conditions'] == null ? undefined : ((value['conditions'] as Array<any>).map(V1NamespaceConditionToJSON)),
        'phase': value['phase'],
    };
}

