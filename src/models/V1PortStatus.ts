/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1PortStatus
 */
export interface V1PortStatus {
    /**
     * Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     *   CamelCase names
     * - cloud provider specific error values must have names that comply with the
     *   format foo.example.com/CamelCase.
     * @type {string}
     * @memberof V1PortStatus
     */
    error?: string;
    /**
     * Port is the port number of the service port of which status is recorded here
     * @type {number}
     * @memberof V1PortStatus
     */
    port: number;
    /**
     * Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP"
     * @type {string}
     * @memberof V1PortStatus
     */
    protocol: string;
}

/**
 * Check if a given object implements the V1PortStatus interface.
 */
export function instanceOfV1PortStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "port" in value;
    isInstance = isInstance && "protocol" in value;

    return isInstance;
}

export function V1PortStatusFromJSON(json: any): V1PortStatus {
    return V1PortStatusFromJSONTyped(json, false);
}

export function V1PortStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PortStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': !exists(json, 'error') ? undefined : json['error'],
        'port': json['port'],
        'protocol': json['protocol'],
    };
}

export function V1PortStatusToJSON(value?: V1PortStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': value.error,
        'port': value.port,
        'protocol': value.protocol,
    };
}

