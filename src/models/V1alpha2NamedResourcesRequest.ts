/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * NamedResourcesRequest is used in ResourceRequestModel.
 * @export
 * @interface V1alpha2NamedResourcesRequest
 */
export interface V1alpha2NamedResourcesRequest {
    /**
     * Selector is a CEL expression which must evaluate to true if a resource instance is suitable. The language is as defined in https://kubernetes.io/docs/reference/using-api/cel/
     * 
     * In addition, for each type NamedResourcesin AttributeValue there is a map that resolves to the corresponding value of the instance under evaluation. For example:
     * 
     *    attributes.quantity["a"].isGreaterThan(quantity("0")) &&
     *    attributes.stringslice["b"].isSorted()
     * @type {string}
     * @memberof V1alpha2NamedResourcesRequest
     */
    selector: string;
}

/**
 * Check if a given object implements the V1alpha2NamedResourcesRequest interface.
 */
export function instanceOfV1alpha2NamedResourcesRequest(value: object): value is V1alpha2NamedResourcesRequest {
    if (!('selector' in value) || value['selector'] === undefined) return false;
    return true;
}

export function V1alpha2NamedResourcesRequestFromJSON(json: any): V1alpha2NamedResourcesRequest {
    return V1alpha2NamedResourcesRequestFromJSONTyped(json, false);
}

export function V1alpha2NamedResourcesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha2NamedResourcesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'selector': json['selector'],
    };
}

export function V1alpha2NamedResourcesRequestToJSON(value?: V1alpha2NamedResourcesRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'selector': value['selector'],
    };
}

