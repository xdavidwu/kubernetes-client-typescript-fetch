/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1PersistentVolumeClaimTemplate } from './V1PersistentVolumeClaimTemplate';
import {
    V1PersistentVolumeClaimTemplateFromJSON,
    V1PersistentVolumeClaimTemplateFromJSONTyped,
    V1PersistentVolumeClaimTemplateToJSON,
} from './V1PersistentVolumeClaimTemplate';

/**
 * Represents an ephemeral volume that is handled by a normal storage driver.
 * @export
 * @interface V1EphemeralVolumeSource
 */
export interface V1EphemeralVolumeSource {
    /**
     * 
     * @type {V1PersistentVolumeClaimTemplate}
     * @memberof V1EphemeralVolumeSource
     */
    volumeClaimTemplate?: V1PersistentVolumeClaimTemplate;
}

/**
 * Check if a given object implements the V1EphemeralVolumeSource interface.
 */
export function instanceOfV1EphemeralVolumeSource(value: object): value is V1EphemeralVolumeSource {
    return true;
}

export function V1EphemeralVolumeSourceFromJSON(json: any): V1EphemeralVolumeSource {
    return V1EphemeralVolumeSourceFromJSONTyped(json, false);
}

export function V1EphemeralVolumeSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1EphemeralVolumeSource {
    if (json == null) {
        return json;
    }
    return {
        
        'volumeClaimTemplate': json['volumeClaimTemplate'] == null ? undefined : V1PersistentVolumeClaimTemplateFromJSON(json['volumeClaimTemplate']),
    };
}

export function V1EphemeralVolumeSourceToJSON(value?: V1EphemeralVolumeSource | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'volumeClaimTemplate': V1PersistentVolumeClaimTemplateToJSON(value['volumeClaimTemplate']),
    };
}

