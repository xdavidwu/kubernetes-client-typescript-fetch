/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1LoadBalancerStatus } from './V1LoadBalancerStatus';
import {
    V1LoadBalancerStatusFromJSON,
    V1LoadBalancerStatusFromJSONTyped,
    V1LoadBalancerStatusToJSON,
} from './V1LoadBalancerStatus';
import type { V1Condition } from './V1Condition';
import {
    V1ConditionFromJSON,
    V1ConditionFromJSONTyped,
    V1ConditionToJSON,
} from './V1Condition';

/**
 * ServiceStatus represents the current status of a service.
 * @export
 * @interface V1ServiceStatus
 */
export interface V1ServiceStatus {
    /**
     * Current service state
     * @type {Array<V1Condition>}
     * @memberof V1ServiceStatus
     */
    conditions?: Array<V1Condition>;
    /**
     * 
     * @type {V1LoadBalancerStatus}
     * @memberof V1ServiceStatus
     */
    loadBalancer?: V1LoadBalancerStatus;
}

/**
 * Check if a given object implements the V1ServiceStatus interface.
 */
export function instanceOfV1ServiceStatus(value: object): value is V1ServiceStatus {
    return true;
}

export function V1ServiceStatusFromJSON(json: any): V1ServiceStatus {
    return V1ServiceStatusFromJSONTyped(json, false);
}

export function V1ServiceStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ServiceStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'conditions': json['conditions'] == null ? undefined : ((json['conditions'] as Array<any>).map(V1ConditionFromJSON)),
        'loadBalancer': json['loadBalancer'] == null ? undefined : V1LoadBalancerStatusFromJSON(json['loadBalancer']),
    };
}

export function V1ServiceStatusToJSON(value?: V1ServiceStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'conditions': value['conditions'] == null ? undefined : ((value['conditions'] as Array<any>).map(V1ConditionToJSON)),
        'loadBalancer': V1LoadBalancerStatusToJSON(value['loadBalancer']),
    };
}

