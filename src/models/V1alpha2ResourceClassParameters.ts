/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1alpha2ResourceClassParametersReference } from './V1alpha2ResourceClassParametersReference';
import {
    V1alpha2ResourceClassParametersReferenceFromJSON,
    V1alpha2ResourceClassParametersReferenceFromJSONTyped,
    V1alpha2ResourceClassParametersReferenceToJSON,
} from './V1alpha2ResourceClassParametersReference';
import type { V1alpha2VendorParameters } from './V1alpha2VendorParameters';
import {
    V1alpha2VendorParametersFromJSON,
    V1alpha2VendorParametersFromJSONTyped,
    V1alpha2VendorParametersToJSON,
} from './V1alpha2VendorParameters';
import type { V1alpha2ResourceFilter } from './V1alpha2ResourceFilter';
import {
    V1alpha2ResourceFilterFromJSON,
    V1alpha2ResourceFilterFromJSONTyped,
    V1alpha2ResourceFilterToJSON,
} from './V1alpha2ResourceFilter';
import type { V1ObjectMeta } from './V1ObjectMeta';
import {
    V1ObjectMetaFromJSON,
    V1ObjectMetaFromJSONTyped,
    V1ObjectMetaToJSON,
} from './V1ObjectMeta';

/**
 * ResourceClassParameters defines resource requests for a ResourceClass in an in-tree format understood by Kubernetes.
 * @export
 * @interface V1alpha2ResourceClassParameters
 */
export interface V1alpha2ResourceClassParameters {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof V1alpha2ResourceClassParameters
     */
    apiVersion?: string;
    /**
     * Filters describes additional contraints that must be met when using the class.
     * @type {Array<V1alpha2ResourceFilter>}
     * @memberof V1alpha2ResourceClassParameters
     */
    filters?: Array<V1alpha2ResourceFilter>;
    /**
     * 
     * @type {V1alpha2ResourceClassParametersReference}
     * @memberof V1alpha2ResourceClassParameters
     */
    generatedFrom?: V1alpha2ResourceClassParametersReference;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof V1alpha2ResourceClassParameters
     */
    kind?: string;
    /**
     * 
     * @type {V1ObjectMeta}
     * @memberof V1alpha2ResourceClassParameters
     */
    metadata?: V1ObjectMeta;
    /**
     * VendorParameters are arbitrary setup parameters for all claims using this class. They are ignored while allocating the claim. There must not be more than one entry per driver.
     * @type {Array<V1alpha2VendorParameters>}
     * @memberof V1alpha2ResourceClassParameters
     */
    vendorParameters?: Array<V1alpha2VendorParameters>;
}

/**
 * Check if a given object implements the V1alpha2ResourceClassParameters interface.
 */
export function instanceOfV1alpha2ResourceClassParameters(value: object): value is V1alpha2ResourceClassParameters {
    return true;
}

export function V1alpha2ResourceClassParametersFromJSON(json: any): V1alpha2ResourceClassParameters {
    return V1alpha2ResourceClassParametersFromJSONTyped(json, false);
}

export function V1alpha2ResourceClassParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha2ResourceClassParameters {
    if (json == null) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(V1alpha2ResourceFilterFromJSON)),
        'generatedFrom': json['generatedFrom'] == null ? undefined : V1alpha2ResourceClassParametersReferenceFromJSON(json['generatedFrom']),
        'kind': json['kind'] == null ? undefined : json['kind'],
        'metadata': json['metadata'] == null ? undefined : V1ObjectMetaFromJSON(json['metadata']),
        'vendorParameters': json['vendorParameters'] == null ? undefined : ((json['vendorParameters'] as Array<any>).map(V1alpha2VendorParametersFromJSON)),
    };
}

export function V1alpha2ResourceClassParametersToJSON(value?: V1alpha2ResourceClassParameters | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'apiVersion': value['apiVersion'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(V1alpha2ResourceFilterToJSON)),
        'generatedFrom': V1alpha2ResourceClassParametersReferenceToJSON(value['generatedFrom']),
        'kind': value['kind'],
        'metadata': V1ObjectMetaToJSON(value['metadata']),
        'vendorParameters': value['vendorParameters'] == null ? undefined : ((value['vendorParameters'] as Array<any>).map(V1alpha2VendorParametersToJSON)),
    };
}

