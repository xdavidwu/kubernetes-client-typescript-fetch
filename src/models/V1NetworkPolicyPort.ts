/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntOrString } from './IntOrString';
import {
    IntOrStringFromJSON,
    IntOrStringFromJSONTyped,
    IntOrStringToJSON,
} from './IntOrString';

/**
 * NetworkPolicyPort describes a port to allow traffic on
 * @export
 * @interface V1NetworkPolicyPort
 */
export interface V1NetworkPolicyPort {
    /**
     * endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
     * @type {number}
     * @memberof V1NetworkPolicyPort
     */
    endPort?: number;
    /**
     * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
     * @type {IntOrString}
     * @memberof V1NetworkPolicyPort
     */
    port?: IntOrString;
    /**
     * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
     * @type {string}
     * @memberof V1NetworkPolicyPort
     */
    protocol?: string;
}

/**
 * Check if a given object implements the V1NetworkPolicyPort interface.
 */
export function instanceOfV1NetworkPolicyPort(value: object): value is V1NetworkPolicyPort {
    return true;
}

export function V1NetworkPolicyPortFromJSON(json: any): V1NetworkPolicyPort {
    return V1NetworkPolicyPortFromJSONTyped(json, false);
}

export function V1NetworkPolicyPortFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1NetworkPolicyPort {
    if (json == null) {
        return json;
    }
    return {
        
        'endPort': json['endPort'] == null ? undefined : json['endPort'],
        'port': json['port'] == null ? undefined : IntOrStringFromJSON(json['port']),
        'protocol': json['protocol'] == null ? undefined : json['protocol'],
    };
}

export function V1NetworkPolicyPortToJSON(value?: V1NetworkPolicyPort | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'endPort': value['endPort'],
        'port': IntOrStringToJSON(value['port']),
        'protocol': value['protocol'],
    };
}

