/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * PortworxVolumeSource represents a Portworx volume resource.
 * @export
 * @interface V1PortworxVolumeSource
 */
export interface V1PortworxVolumeSource {
    /**
     * fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
     * @type {string}
     * @memberof V1PortworxVolumeSource
     */
    fsType?: string;
    /**
     * readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
     * @type {boolean}
     * @memberof V1PortworxVolumeSource
     */
    readOnly?: boolean;
    /**
     * volumeID uniquely identifies a Portworx volume
     * @type {string}
     * @memberof V1PortworxVolumeSource
     */
    volumeID: string;
}

/**
 * Check if a given object implements the V1PortworxVolumeSource interface.
 */
export function instanceOfV1PortworxVolumeSource(value: object): value is V1PortworxVolumeSource {
    if (!('volumeID' in value) || value['volumeID'] === undefined) return false;
    return true;
}

export function V1PortworxVolumeSourceFromJSON(json: any): V1PortworxVolumeSource {
    return V1PortworxVolumeSourceFromJSONTyped(json, false);
}

export function V1PortworxVolumeSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PortworxVolumeSource {
    if (json == null) {
        return json;
    }
    return {
        
        'fsType': json['fsType'] == null ? undefined : json['fsType'],
        'readOnly': json['readOnly'] == null ? undefined : json['readOnly'],
        'volumeID': json['volumeID'],
    };
}

export function V1PortworxVolumeSourceToJSON(value?: V1PortworxVolumeSource | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'fsType': value['fsType'],
        'readOnly': value['readOnly'],
        'volumeID': value['volumeID'],
    };
}

