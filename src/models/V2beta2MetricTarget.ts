/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.24.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * MetricTarget defines the target value, average value, or average utilization of a specific metric
 * @export
 * @interface V2beta2MetricTarget
 */
export interface V2beta2MetricTarget {
    /**
     * averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
     * @type {number}
     * @memberof V2beta2MetricTarget
     */
    averageUtilization?: number;
    /**
     * averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
     * @type {string}
     * @memberof V2beta2MetricTarget
     */
    averageValue?: string;
    /**
     * type represents whether the metric type is Utilization, Value, or AverageValue
     * @type {string}
     * @memberof V2beta2MetricTarget
     */
    type: string;
    /**
     * value is the target value of the metric (as a quantity).
     * @type {string}
     * @memberof V2beta2MetricTarget
     */
    value?: string;
}

/**
 * Check if a given object implements the V2beta2MetricTarget interface.
 */
export function instanceOfV2beta2MetricTarget(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function V2beta2MetricTargetFromJSON(json: any): V2beta2MetricTarget {
    return V2beta2MetricTargetFromJSONTyped(json, false);
}

export function V2beta2MetricTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2beta2MetricTarget {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'averageUtilization': !exists(json, 'averageUtilization') ? undefined : json['averageUtilization'],
        'averageValue': !exists(json, 'averageValue') ? undefined : json['averageValue'],
        'type': json['type'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function V2beta2MetricTargetToJSON(value?: V2beta2MetricTarget | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'averageUtilization': value.averageUtilization,
        'averageValue': value.averageValue,
        'type': value.type,
        'value': value.value,
    };
}

