/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1PodAffinity } from './V1PodAffinity';
import {
    V1PodAffinityFromJSON,
    V1PodAffinityFromJSONTyped,
    V1PodAffinityToJSON,
} from './V1PodAffinity';
import type { V1NodeAffinity } from './V1NodeAffinity';
import {
    V1NodeAffinityFromJSON,
    V1NodeAffinityFromJSONTyped,
    V1NodeAffinityToJSON,
} from './V1NodeAffinity';
import type { V1PodAntiAffinity } from './V1PodAntiAffinity';
import {
    V1PodAntiAffinityFromJSON,
    V1PodAntiAffinityFromJSONTyped,
    V1PodAntiAffinityToJSON,
} from './V1PodAntiAffinity';

/**
 * Affinity is a group of affinity scheduling rules.
 * @export
 * @interface V1Affinity
 */
export interface V1Affinity {
    /**
     * 
     * @type {V1NodeAffinity}
     * @memberof V1Affinity
     */
    nodeAffinity?: V1NodeAffinity;
    /**
     * 
     * @type {V1PodAffinity}
     * @memberof V1Affinity
     */
    podAffinity?: V1PodAffinity;
    /**
     * 
     * @type {V1PodAntiAffinity}
     * @memberof V1Affinity
     */
    podAntiAffinity?: V1PodAntiAffinity;
}

/**
 * Check if a given object implements the V1Affinity interface.
 */
export function instanceOfV1Affinity(value: object): value is V1Affinity {
    return true;
}

export function V1AffinityFromJSON(json: any): V1Affinity {
    return V1AffinityFromJSONTyped(json, false);
}

export function V1AffinityFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Affinity {
    if (json == null) {
        return json;
    }
    return {
        
        'nodeAffinity': json['nodeAffinity'] == null ? undefined : V1NodeAffinityFromJSON(json['nodeAffinity']),
        'podAffinity': json['podAffinity'] == null ? undefined : V1PodAffinityFromJSON(json['podAffinity']),
        'podAntiAffinity': json['podAntiAffinity'] == null ? undefined : V1PodAntiAffinityFromJSON(json['podAntiAffinity']),
    };
}

export function V1AffinityToJSON(value?: V1Affinity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'nodeAffinity': V1NodeAffinityToJSON(value['nodeAffinity']),
        'podAffinity': V1PodAffinityToJSON(value['podAffinity']),
        'podAntiAffinity': V1PodAntiAffinityToJSON(value['podAntiAffinity']),
    };
}

